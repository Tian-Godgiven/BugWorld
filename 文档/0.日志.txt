11/24：制作了cube和tile对象

12/5
	11:37：关于工作，需要考虑的还真不少，首先是工作的效率要怎么搞？在加入工作的时候不同工作有着不同的效率计算方式？那效率就得是一个函数？把效率的计算放在需求里怎么样？不够好，这样的话效率的修改就只在需求里进行了，最好的方式应该是效率单独一个函数，并返回效率计算的值，用这个值来修改效率属性。三个函数了都，那干脆就来一个getFunc？算了吧您内！

12/6
	关于数量问题，实在没有什么好的解决办法，至少我可以通过information对象来减少对象的数据量吧……



结算：基础功能的一种，遍历对象的“系数”和能力，借此调用不同的功能函数

回合：系统的一种，通过点击“下一回合”经过时间，并依次对虫群状态，工作，能力进行结算，改变虫巢或虫群单位的属性。

行动：在回合内进行的行为，现阶段只有虫母拥有

工作：在回合经过前，为虫巢中的单位分配工作，不同的单位可以进行的工作类型也不同，工作会默认保存至下一回合，直到该单位被分配了其他工作。也就是说可以一定程度上连点下一回合

虫群扩张：属于工作的一种，包含虫母产卵，卵孵化为幼虫，幼虫羽化并分化为成虫等步骤，同时也包含了照料幼虫的工作，幼虫的分化由虫母（玩家）决定

虫巢建设：属于工作的一种，为虫巢修筑不同的设施，提升虫巢的强度/空间/舒适度等各项数值，为下一阶段做准备

觅食：属于工作的一种，派出工蚁进行觅食，根据工作能力获得食物

探索：属于工作的一种，派出虫巢探索的兵蚁可能会遭遇随机事件，概率性地获得特殊地点奖励或惩罚，这个工作相当于是以虫群的损失换取信息

事件：系统的一种，虫群会遭遇不同的随机事件，通过天平系统修正事件的“好”与“坏”，通过随机的“程度值”来决定这个事件的好/坏程度

天敌：系统的一种，随着回合数的进行，派出虫巢的虫群会概率性地遭遇天敌，每遭遇一次天敌，其出现概率就会逐渐提升，遭遇天敌时，虫群会随机损失一定比例。天敌并非只有一种，遭遇的天敌，遇敌率，虫群损失比例都会记录在【天敌】系统中。当某一种天敌的遇敌率达到100%时，将虫群派出虫巢可能会引诱天敌发现虫巢。随着虫群规模的扩张，天敌的强度也会变强，天敌系统会持续到“异虫”阶段

虫母强化：行动的一种，当虫群规模，虫巢储备达到一定程度时解锁虫母的强化，通过消耗食物储备和提高虫母的食物消耗速度来强化虫母的产卵效率，寿命，工作能力，生命值，防御力等等。

12/8
	23:23:分为两种：虫巢当前可以进行的工作，用id标识，和虫巢当前正在进行的工作，用name标识，“新增工作“应该从当前可以进行的工作中查找



12/12
	有多少个单位能够给参加指定的这个工作？
首先要减去这些单位中参加了同类型工作的数量
其次要用除法获得剩下的单位中还能够参加这个工作的数量

如果是“全部”则还要减去参加了其他工作的数量

返回一个“ableWorkNum()

做成那样的：设施单位旁边有[升级] [增加]的按键！



12/19
	我没想到功能实现竟然会如此令我感到困扰！
首先需要明确一点：因某个设施而启动的“升级”必须直接和这个设施相关联，而非“寻找”到同名设施。因此在创建这个“升级”工作时，必须将facility作为参数传入进去。
然后要明确一点：是设施创建了工作，而不是创建了工作然后等着设施来调用，只有这样才能让其与设施更加紧密。
我希望这个“升级”工作能够显示在“新增工作”当中，但目前的”新增工作“只会按照字典里的内容直接调用work函数生成对象。对象嵌套？让work拥有一个创建函数，使其生成一个work对象？”虫巢“只保存”工作id“来区分有哪些工作可以进行
比较大的冲突就在于这两点：facility是否要作为参数传入进去？答案恐怕是要，从各方面来说都是需要的。这意味着我们需要舍弃“新增工作”吗？
我不能接受“升级”可以被同时进行多个。我需要有一个对象来承载一部分的属性，例如“独有”，我需要work对象

12/25
	重新整理一下需求吧！我对“升级”的需求有哪些？
1.升级工作必须与对应的设施直接相连，也就是说产生这个工作时，必须将设施对象传入作为参数。在工作完成时，也必须直接作用到这个设施上。
→我可以将设施对象作为一个属性传入工作中。
2.是设施创建了升级工作，创建函数必须由设施调用。但是目前的“新建工作”采用的是遍历“可被创建的工作”列表，然后生成一个临时的工作对象产生可用数据。需要修改这一部分的内容，使得一部分工作的显示受到调控，当某个工作已经存在时，若其“独一”则不显示？但是之后又要如何将设施和工作绑定？在“新建工作”一栏产生的工作理论上和设施是不相关的才对，要不就放弃这一点，使得设施升级只能通过“设施”→“升级”来开启？这样的话就能最大程度地保证设施和工作相绑定。当然也可以有另一种方式：在将工作加入设施时，为其增加一个“来源”，哎，这个好，这个能满足我们目前的需求还不需要修改原本的数据结构。

那么现在的修改就应该是这样的：首先我要给工作一个新的属性“独一”，若这个工作已经存在，并且是独一，则不在“新建工作”中将其显示。
虫巢中的可进行工作需要做一定的修改，将这个工作的“来源”加入其中，在工作创建时将其来源作为一个属性传递给创建函数



是否要这样：在设施升级时才生成一个工作对象？我觉得可行！降低lib浓度！但是是否会不清晰？否定，本来这就是这个设施的一部分！是否加入工作词典？否定，不属于真*工作，是设施的附属工作













