8/21：
	13:43：任务清单：1.完成对隐藏属性的重构√
		2.完成对“无属性”对象的制作√
		3.完成max，min，now数值类对象的制作

---

8/19：
	14:34：继续重构属性对象内容，重构目标包括：
		1.属性无对象：用于站位，但属性的值为无，属性值的返回为null，属性值的显示为”无“
		2.数值类属性的拓充：最大值，最小值，当前值类型，属性值默认返回“当前值”，可以进一步访问“最大值”和“最小值”，对影响的计算需要分开来？那么这些“最大值”“最小值”就需要是属性对象了…… 

---

8/15：
	0:36：修好了，但是数据读取还有些问题，尤其是有关null值的属性的读取
	13:53：继续修复数据读取，需要对null值进行额外地处理
	15:31：完全修复完成，pull并重新编写state对象文档

---

8/14：
	23:14：尝试修复stateToDiv

---

8/13:
	0:30：修改了属性对象的内容，现在其类型会更准确地显示在其中了。尚未完善stateToDiv的显示功能

---



8/4：
	0:30：问题包括：
		1.如何处理objectDiv的收缩问题
		2.如何将￥{}的替换加入info_div中 

---



8/3：
	16:00：时隔一个月的复活，继续制作事件Tile，目前正在制作事件Tile的css部分，有一些问题如下：
	1.下回合发生事件的概率/倾向/强度是否要显示在事件Tile中？

​	23:11：在做信息文字内包含变量和方程式的内融

---

7/3：
	11:18：事件对象有了个基础模型，但是事件的发生流程没有定好！不同区域发生事件的初始倾向，基础强度，初始概率都应该不同，要记录在区域内部！
	15:59：上述属性到底要记载在什么样的地方呢？还是说应当在选择区域时进行设定？
		这些应该是区域的“属性”！！！！！一个区域越危险，那么发生坏事的概率就更高，发生好事的概率就更低！一个区域越繁荣，发生事件的概率就更高！
威胁：数值，将倾向中的某一方提高，以增加其发生某类事件的概率
繁荣：将事件判定是否会发生的概率提高，以100为基准！
险恶：发生坏事时，坏事的强度加值
收益：发生好事时，好事的强度加值

然后再在虫巢对象/区域对象中记录当前的概率和倾向

------

7/2：
	18:53：设施Tile和行为state的文档搞定了，开始制作“事件”对象和事件T

------

6/27：
	10:10：设施Tile做完了 ，开始写文档，设施Tile和行为movement属性的文档
	17:09：优化了“行为”属性对象，事件对象要包括：还有多久发生下一个事件/事件发送概率，好/坏概率，有哪些事件的预定地会发送，有哪些事件正在发生

___

6/24：
	0:03：差不多搞定了，明天来写文档吧，工作对象，工作tile，设施对象，命令tile都要
	17:48：开始做设施tile

---

6/23：
	0:42：总算是可以正常地开始设施建造了，但还是有一些问题包括：设施建造工作的“所属”值，工作对象需要“所属”吗？我认为是需要的！应该在“开始工作”时添加！内容填充显然有误，需要进一步修改！记得把设施对象的文本做好！
	9:52：先写设施对象的文本吧
	11:31：要怎么控制虫群对象加入独立的工作当中？？？创建了一个独立的工作，然后呢？？？应该有一个“正在进行的事务”！！！！然后在“命令”当中将虫群单位分配到这些事务中！而“开始”事务，就是将对应的“正在进行的事务“添加到”命令“列表中。还是得吧”工作Tile”拿回来啊，我无语了哥们
	22:31：首先“建造设施”这个工作是不能添加的，其次到底要怎么

---

6/22：
	15:37：两个方案：1.创建临时的对象，显示其信息，然后将其删除
									2.使用json内容生成信息
				怎么看都改选择2方案，那么就要和stateToDiv区分开来，做一个jsonToDiv了
	16:06：
		列一下需求：
			1.一部分工作拥有“进度”，这类工作不能重复，需要是单独的work对象，来保存其进度属性
			2.没有“进度”或类似设定的工作可以重复，可以多个虫群单位进行该工作，此时就不应该做成单独的work对象
			3.所有的“设施”对象，都必须是单独的work对象，而“解锁某某设施的建筑”，都解锁的是其对应的“建造工作”，那么“解锁设施”本质上就是解锁设施的“建筑”工作了。我们应该做一个数组内容如下：{设施key:工作对象,设施key:工作对象}

​		那么解决办法就很显然了，对工作对象，内部存储work对象，[work,work,work]，在开始工作时，如果这个工作对象是“独立”的，则获取其中的key，来创建一个新的work对象并返回，否则直接返回这个work对象
​	20:40：完成了work对象的重构和文本编辑，待会来做facility对象的，争取今天把选择工作做完

------

6/17：
	0:27：初步完成了选择Tile的实现，异步返回数据和几个基础的函数应该都没什么太大的问题，接下来要做默认的css样式和进一步的测试
	16:47：完善了多个选择Tile同时被创建时的选择逻辑，开始制作并测试css相关内容

------

6/16：
	16:59：继续实现“选择”tile的创建，以及对应的功能


------

6/13：
	17:06：继续实现“选择”tile的创建

------

6/11：
	14:16：开始制作“选择”tile，这是一个可以根据“选择”函数提供的数据，生成选择框
	16:46：修改了tile的创建逻辑，现在支持更多功能了。

------

6/9：
	1:26：采用倒序日志了，每次要翻半天实在有点麻烦。姑且完成了”命令Tile“，下一步开始完善”设施Tile“和设施对象。
	10:41：开始完善设施Tile，主要是三个地方：增建，升级，拆除。打算弄成命令Tile那种感觉，做一个设施命令Tile。在设施旁边显示“增建，升级，拆除”三个命令选项？？？但是要怎么和命令Tile同步显示呢？
	11:21：还得是基于跑团！做个“修建设施”和“升级设施”的工作怎么样？需要选择对应的设施，然后获得相应的设施工作，再放进来！接下来的问题就是要怎么“选择对应的设施”！

------

11/24：制作了cube和tile对象

12/5
	11:37：关于工作，需要考虑的还真不少，首先是工作的效率要怎么搞？在加入工作的时候不同工作有着不同的效率计算方式？那效率就得是一个函数？把效率的计算放在需求里怎么样？不够好，这样的话效率的修改就只在需求里进行了，最好的方式应该是效率单独一个函数，并返回效率计算的值，用这个值来修改效率属性。三个函数了都，那干脆就来一个getFunc？算了吧您内！

12/6
	关于数量问题，实在没有什么好的解决办法，至少我可以通过information对象来减少对象的数据量吧……



结算：基础功能的一种，遍历对象的“系数”和能力，借此调用不同的功能函数

回合：系统的一种，通过点击“下一回合”经过时间，并依次对虫群状态，工作，能力进行结算，改变虫巢或虫群单位的属性。

行动：在回合内进行的行为，现阶段只有虫母拥有

工作：在回合经过前，为虫巢中的单位分配工作，不同的单位可以进行的工作类型也不同，工作会默认保存至下一回合，直到该单位被分配了其他工作。也就是说可以一定程度上连点下一回合

虫群扩张：属于工作的一种，包含虫母产卵，卵孵化为幼虫，幼虫羽化并分化为成虫等步骤，同时也包含了照料幼虫的工作，幼虫的分化由虫母（玩家）决定

虫巢建设：属于工作的一种，为虫巢修筑不同的设施，提升虫巢的强度/空间/舒适度等各项数值，为下一阶段做准备

觅食：属于工作的一种，派出工蚁进行觅食，根据工作能力获得食物

探索：属于工作的一种，派出虫巢探索的兵蚁可能会遭遇随机事件，概率性地获得特殊地点奖励或惩罚，这个工作相当于是以虫群的损失换取信息

事件：系统的一种，虫群会遭遇不同的随机事件，通过天平系统修正事件的“好”与“坏”，通过随机的“程度值”来决定这个事件的好/坏程度

天敌：系统的一种，随着回合数的进行，派出虫巢的虫群会概率性地遭遇天敌，每遭遇一次天敌，其出现概率就会逐渐提升，遭遇天敌时，虫群会随机损失一定比例。天敌并非只有一种，遭遇的天敌，遇敌率，虫群损失比例都会记录在【天敌】系统中。当某一种天敌的遇敌率达到100%时，将虫群派出虫巢可能会引诱天敌发现虫巢。随着虫群规模的扩张，天敌的强度也会变强，天敌系统会持续到“异虫”阶段

虫母强化：行动的一种，当虫群规模，虫巢储备达到一定程度时解锁虫母的强化，通过消耗食物储备和提高虫母的食物消耗速度来强化虫母的产卵效率，寿命，工作能力，生命值，防御力等等。

12/8
	23:23:分为两种：虫巢当前可以进行的工作，用id标识，和虫巢当前正在进行的工作，用name标识，“新增工作“应该从当前可以进行的工作中查找



12/12
	有多少个单位能够给参加指定的这个工作？
首先要减去这些单位中参加了同类型工作的数量
其次要用除法获得剩下的单位中还能够参加这个工作的数量

如果是“全部”则还要减去参加了其他工作的数量

返回一个“ableWorkNum()

做成那样的：设施单位旁边有[升级] [增加]的按键！

等一下，这不就是贪心算法吗 ！！！！！！！！！



12/19
	我没想到功能实现竟然会如此令我感到困扰！
首先需要明确一点：因某个设施而启动的“升级”必须直接和这个设施相关联，而非“寻找”到同名设施。因此在创建这个“升级”工作时，必须将facility作为参数传入进去。
然后要明确一点：是设施创建了工作，而不是创建了工作然后等着设施来调用，只有这样才能让其与设施更加紧密。
我希望这个“升级”工作能够显示在“新增工作”当中，但目前的”新增工作“只会按照字典里的内容直接调用work函数生成对象。对象嵌套？让work拥有一个创建函数，使其生成一个work对象？”虫巢“只保存”工作id“来区分有哪些工作可以进行
比较大的冲突就在于这两点：facility是否要作为参数传入进去？答案恐怕是要，从各方面来说都是需要的。这意味着我们需要舍弃“新增工作”吗？
我不能接受“升级”可以被同时进行多个。我需要有一个对象来承载一部分的属性，例如“独有”，我需要work对象

12/25
	重新整理一下需求吧！我对“升级”的需求有哪些？
1.升级工作必须与对应的设施直接相连，也就是说产生这个工作时，必须将设施对象传入作为参数。在工作完成时，也必须直接作用到这个设施上。
→我可以将设施对象作为一个属性传入工作中。
2.是设施创建了升级工作，创建函数必须由设施调用。但是目前的“新建工作”采用的是遍历“可被创建的工作”列表，然后生成一个临时的工作对象产生可用数据。需要修改这一部分的内容，使得一部分工作的显示受到调控，当某个工作已经存在时，若其“独一”则不显示？但是之后又要如何将设施和工作绑定？在“新建工作”一栏产生的工作理论上和设施是不相关的才对，要不就放弃这一点，使得设施升级只能通过“设施”→“升级”来开启？这样的话就能最大程度地保证设施和工作相绑定。当然也可以有另一种方式：在将工作加入设施时，为其增加一个“来源”，哎，这个好，这个能满足我们目前的需求还不需要修改原本的数据结构。

那么现在的修改就应该是这样的：首先我要给工作一个新的属性“独一”，若这个工作已经存在，并且是独一，则不在“新建工作”中将其显示。
虫巢中的可进行工作需要做一定的修改，将这个工作的“来源”加入其中，在工作创建时将其来源作为一个属性传递给创建函数



是否要这样：在设施升级时才生成一个工作对象？我觉得可行！降低lib浓度！但是是否会不清晰？否定，本来这就是这个设施的一部分！是否加入工作词典？否定，不属于真*工作，是设施的附属工作



1/13
	17:12：重新开始制作，虽然对象构建很重要，但目前还是打算先按照流程做下去

------

4/29：
	15:49：应该明确一点，tile本身只是一个对应的元素的框架，应该用tile和tileButton来组成这样的一个框架，而不是在tile内部使用tileButton

------

4/30：
	23:22：会不会是我的思路错了呢？我应该做的是将对应的内容显示进对应的tile中，而不是创造对应的内容的tile！我应该将对应的内容放进一个数组中，然后按照数组生成对应的tile和cube，这个事件当然是在最顶层进行的！

------

5/4：
	18:07：之前的work太菜了，不行，虫群数量多起来以后执行很成问题，打算用“命令”tile来代替它的工作安排功能，最好是能够选中多个虫群单位来安排工作
	19:43：但是这样的话显示就很成问题了啊，原本的话只需要显示安排了哪些工作就行，现在显示的就比较清晰，要不还是别改了……不过等一下啊，【命令】的确是一个有点用途的东西……可以给特殊单位下达一些指令……但是目前的话还是先用着【工作】吧……

是一个贪心算法！也就是说会优先将已经有工作了的单位的工作量耗光！然后再尝试着消耗较大的工作量单位！

呃呃呃呃呃呃好难搞啊！如果限制每个单位一个回合只能进行一个工作的话，会瞬间简单一百万倍……！

------

5/10
	19:46：单位应当存在一个“影响“属性，用于记录其当前受到的属性值影响
在显示单位的属性Tile时，应当先计算其所有的“影响“

------

5/12
	14:05：如果要把属性做成“影响”的话，那么首先就是在初始化时，令对应的属性变成影响对象，这些属性的来源是“自身”，优先级是最低的。
	然后再就是效果不会改变属性了，应该是“添加影响”
	然后就是这里的‘改变属性’，实质上是改变‘参数’内部的属性吧，例如“生命”属性

它的结构是这样的：
	对象→属性→参数→生命
改变是“生命”这个属性的值，添加的影响也是在“生命”内部
生命：[影响1，影响2]

但是还有另一个问题啊，那就是如果这个效果是“增加属性“呢？那首先”增加的属性“也应当是一个“影响”才对，应该有其来源！那么举例说”产卵“这个”特殊“属性就该应该是：

对象→属性→特殊[ 产卵[影响1，影响2] ，其他[影响1，影响2] ，……]  

产卵作为一个属性，是有其来源的！

那么其他属性，也应当有类似的结构，例如“生命”

对象→属性→参数[ 生命：{ [] } ，寿命{ [] } ，……]

具体一点的话就是：

```
对象：{
	属性：{
		参数：{
			生命：{	
                影响：[ 
                    {
                        影响值：abc
                        影响来源：123
                        影响优先级：99999
                    }，
                    {
                    	影响值：def
                    	影响来源：456
                    	影响优先级：1
                    }
                ]
                属性来源：xxx
			}
		}
	}
}
```



等一下……这个“受到的影响”在判断是否能够持续下去时……是怎么做的？
首先对象不存在了的时候肯定是不能继续的，但是除了不存在，一些影响也会有其他的失效方式啊……？
比如说虫群单位死亡时，尸体还在但是命没了，那就会继续触发“占据虫巢空间”的效果啊？但是其他的一些效果肯定是不能继续下的了，所以不同的效果理应有不同的“检测失效”方式……？
也就是说……我们还得给这些“影响”对象一个属性，属性的内容是”失效检测函数“，然后每次检测这个影响是否还能继续存在时，就要触发一遍这个”失效检测函数“……？

效果的影响是在什么时候施加的……？是在“对象存在在虫巢内”时施加的……？
每回合开始时，检测这些影响是否能够继续生效……？
但是这样的话岂不是每一个回合都要全部运行一遍？
这么来看“起效”和“失效”才是比较正常的吧……？但是一个对象施加的效果肯定不止一种啊，一些效果的失效方式也不会一样啊……

把“效果”做成一个对象？那么对象的效果又什么怎么起效的呢？
但是话又说回来，“属性”的改动肯定是有必要的啊，这些“影响“的确需要优先级和来源，并且也的确需要不同的显示方式！

也就是说“属性”→“影响”这个是确定要做的了

但问题是施加这些“影响“的”效果“又要怎么办呢？还是要用“失效“和”起效“的方法吗？
呃呃呃……应该还是要用“失效”和“起效“了……但问题还是那个，要什么时候失效？什么时候起效？什么时候判定失效/起效？



所以到底是哪一种？影响or效果？

影响：所有单位的属性发生的改变一目了然，需要在函数中手动附加影响和消除影响，每次属性发生变化时，都需要重新计算所有影响？

效果：所有单位受到的效果？？？一个buff，buff的效果是+3攻击，然后呢？buff生效了？在每一种行动时计算所有的效果？一个效果是若在进行攻击，则数值+3？还是说是在buff获取和失去时分别处理，获得了这个buff，攻击+3，失去了这个buff，攻击-3？
buff的话……要怎么看到产生的影响呢？

最核心的问题：属性加成的先后关系！新创建的单位如何获得效果的作用？？？

一个数组，用来放置所有的【持续效果】，在创建新单位时施加这些【持续效果】，在效果内部进行满足条件的判定？

效果作用于属性时，对属性施加“影响”，效果失效时撤销对应的”影响”

我们要做的是：全部数值加在一起，然后乘以全部百分比？

举例虫母室：在建筑时，添加一个持续效果，效果需求为[虫母]词条，效果内容为“生命+10”，随后每创建一个单位，都进行效果需求的判定并在成功时施加效果内容。
在虫母室失效时，使得这个持续效果失效，并将其从数组中移除。

如果我希望能够显示一个属性受到的所有影响

那么我就应该获得这个属性会受到哪些影响，例如一个效果的影响是“攻击+5”那么这个效果内除了产生“影响”的【函数】之外，还应该有一个对这个“影响”的说明，也就是说应该有一个：{攻击：+5}的值

然后在生成“属性值”的时候，首先遍历单位的所有属性，获取“属性：基础”，然后遍历单位受到的所有效果，获取“属性：影响”，最终得到单位所显示的属性值

我觉得可以做成映射表那样的！因为我们的很多效果都是找“拥有某个词条”或者“拥有某个特性”的虫子，所以把这些效果需求的“词条”或者“特性”做成key然后对应的效果做成属性，就不需要遍历所有的效果，只需要看这个对象拥有那些词条就可以了！

记录在对象内的效果也应该要用映射表！例如这个效果会修改攻击+5，那么这个效果就应该在{攻击：[这个效果]}内！然后再遍历非典型的效果！

做一张总的单位表要好一点，毕竟现在都有class了！

------

5/17:
	17:10

我的现状是：我的单位有【行为】这样一个属性，在其进行不同的行为时，执行一定的函数，比如“加入虫巢时”“攻击前”，这个属性存放一系列的函数，在指定的行为发生时，触发这些函数。
然后我有一些【特性】对象，设定上来说其会使得单位的某些【行为】发生改变，例如“攻击前，回复3点生命”。

我的问题是：我应该怎么让【特性】改变单位的【行为】呢？

我有两种想法：
1.当单位获得特性时，使得一个特定的函数放进单位的对应的行为中
这个方案实现起来很简单，但有一些问题是：当单位失去这个特性时，我不知道要怎么从单位的行为中删除这个函数，因为这个函数本身并没有任何标识

2.第二个方案引入了一个新的对象【效果】，我在【状态】中使用了这个对象，用来标识“这个状态在触发时会产生什么样的效果”，其内部属性包括“效果函数”和“效果来源”

------

5/24:
	20:59：对象的行为的触发过程应该是什么样的？
例如我要触发chara的“生效”行为：

1.获得chara的“生效”行为对应的“前中后”数组，并依次触发effect
2.effect触发，使用effect对象内的“目标”“来源”“参数”执行相应的“生效”函数
3.但问题是“参数”保存在chara内部，而“目标“需要外界传入，而”来源“没有被保存下来
4.问题又来了，chara内部已经保存了“参数”和“所属”，要放入对应的effect对象内部吗？我觉得不需要！到时候还要修改chara内部的“效果”的参数！
5.我觉得最主要的还是这么一点：chara本身是按照“效果”对象来做的，所以我不需要用效果对象来存储chara的“行为”

那如果我要修改chara的行为呢？我该怎么办呢？所以还是应该这么做，应该使得chara的行为被保持为一个movement对象，反正effect对象是生成的，不许要我手写不是吗？
最主要的还是一点，那就是effect对象的触发过程，为什么要传入一个effect对象进去啊？要它做什么啊？它有价值的参数无非就那几个，很多时候都不需要的吧？

又回到最初的起点了，那现在我的chara的“获得”需要一个chara一个object，谁来提供呢？在初始化阶段怎么就有chara的“目标”了呢？effect对象的“来源”又应该是什么呢？

要明确一点，这里的effect对象是“对象的行为所会产生的效果”而不是“施加到对象上的某一个效果”，这也是我们为什么没有放入“目标”的缘故，也就是说这些行为效果的“来源”应该设定为对象自身吗？这未免有点奇怪了……换一种想法呢？在行为效果触发时，传入

最关键的一点就是effect对象的“来源”是否应当是movement本身所属的对象。如果是的话，会导致什么后果？

结论：这玩意压根就不能做成一个effect对象！要做也是一个特殊的effect对象！

effect对象应该是“会对一个对象施加的效果”，而不是“会产生的效果”，改！

------

5/28
	10:56：今天要把虫群的收纳对象给做了，然后把stateToTileData给改一下，现在这一坨太丑了。我的建议是先改再说。

------

5/30
	10:31：针对stateToTileData的修改，我觉得要先列一下流程，然后把需要实现的功能分装好。首先是属性要遍历变成：“属性名：属性值”的格式，其中一些特殊属性名的属性值有特殊的处理方式，也就是说要根据属性名选择属性值的处理方法。那么“获得属性值”的这一步最好就是用一个映射表：【属性名：属性值的变化方式】来获得对应属性值div。并传回去。
	接下来就是对象和对象div的显示方式，其实也可以按照上述方法来做，一个映射表：【对象类：对象div的生成方式】来获得对应的对象的div，并传回去。

先做上面那个吧，如果是“属性值的变化方式”，那就应当是一个函数，我们可以提供一部分便捷的函数对象。

获得了函数后，还要考虑没有在表中的情况。

​	14:52：开始制作虫群属性和响应的显示，首先要制作的是加入虫巢。
关于属性值的显示，有点麻烦了啊。要怎么才能让对应的属性以指定的方式显示出来呢……

------

5/31:
	1:20：传入GM表格中的object_div因为转换为了字符串，从而失去了原有的data:object引用，从而无法点击显示对应的对象信息。另一方面也不能直接使用bug对象保存在cellvalue内，因为这些值会被转换为json，然而由于循环引用，无法得到正确的json值，即使得到了，恐怕也不是同一个对象了，两个方向：

1.尝试着将objectToDiv生成的div直接放入表格中
2.尝试使得表格中可以保存Bug对象的数据

​	14:34：2大概是实现不了的，这个数据应该是要先json化，然后在表格中解析的json数据，才能显示的，但是关键就是这个Bug对象压根就不能JSON化，其内部会出现循环引用的情况。那么1的可行性如何呢？要怎么在处理数据的这一步，把DIV放进表格当中呢？首先把div放进表格数据中很明显啊也是不可行的，最终还是会经过一个json序列化过程，导致失去原本的dom结构。那么到底要怎么解决这个问题呢……？是要把div保存起来，然后以此放进表格当中吗？

------

6/3：
	15:43：虫群tile的显示做得差不多了，虽然不够完备，但也够用了，之后出现效率问题的话，再考虑修改吧。主要是它这个插件功能够多，像是修改列顺序之类的。
	接下来就按照todo继续做吧。
	16:15：测试了“特性”的获得与失去，修正了一些错误。测试结果还算好，几个相关的删除函数运行得也不算差。继续todo吧
	17:32：为所有对象添加了“来源”属性，修复了haveState()函数的搜索范围限制的bug，实现了”失去特性时，失去对应来源的特性，再判断来源是否为空，从而失去特性“

------

6/4：
	9:59：因为做完了之前留的TODO，所以开始做新的内容，但是感觉之前那个work_tile做得实在是不够好，所以重做一下，变成order_tile。但问题是新的Tile要怎么显示，实在是有些困扰……就比如现在，空闲的虫群单位是否要以虫群形式显示呢？我觉得是要的……

然后就是“占有”，这玩意到底是要怎么做好呢？一个虫群对象内部的单位可以分开来占有。然后我需要它的占有源。那工作还需要分类吗？工作对象是否还需要有多个呢？感觉是不需要了的吧……？那占有还需要是一个dic字典吗？数组就可以了吧！
